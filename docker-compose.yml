services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_DB: desk
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "customer-to-desk:3:1,desk-to-customer:3:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network

  customer-service:
    build:
      context: ./customer
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/desk
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - "8080:8080"
    networks:
      - app-network
    restart: unless-stopped

  desk-service:
    build:
      context: ./desk
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/desk
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - "8081:8081"
    networks:
      - app-network
    restart: always

  #   pgadmin:
  #    container_name: ms_pgadmin
  #    image: dpage/pgadmin4
  #    environment:
  #      PGADMIN_DEFAULT_EMAIL: postgres@example.com
  #      PGADMIN_DEFAULT_PASSWORD: postgres
  #      PGADMIN_CONFIG_SERVER_MODE: 'False'
  #      volumes:
  #        - pgadmin:/var/lib/pgadmin
  #      ports:
  #        - "5050:80"
  #      networks:
  #        - app-network
  #      restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres:
#  pgadmin:







